{"ast":null,"code":"var _jsxFileName = \"/Users/notAdmin/Documents/dev/DarkRiver/frontend/src/screens/UserProfilePage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useReducer, useState } from \"react\";\nimport { Helmet } from \"react-helmet-async\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport { Store } from \"../Store\";\nimport { toast } from \"react-toastify\";\nimport { getError } from \"../utils\";\nimport axios from \"axios\";\nimport { Container } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"UPDATE_REQUEST\":\n      return { ...state,\n        loadingUpdate: true\n      };\n\n    case \"UPDATE_SUCCESS\":\n      return { ...state,\n        loadingUpdate: false\n      };\n\n    case \"UPDATE_FAIL\":\n      return { ...state,\n        loadingUpdate: false\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default function UserProfilePage() {\n  _s();\n\n  const {\n    state,\n    dispatch: ctxDispatch\n  } = useContext(Store);\n  const {\n    userInfo\n  } = state;\n  const [name, setName] = useState(userInfo.name);\n  const [email, setEmail] = useState(userInfo.email);\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [{\n    loadingUpdate\n  }, dispatch] = useReducer(reducer, {\n    loadingUpdate: false\n  });\n\n  const submitHandler = async e => {\n    e.preventDefault();\n\n    try {\n      const {\n        data\n      } = await axios.put(\"/api/users/profile\", {\n        name,\n        email,\n        password\n      }, {\n        headers: {\n          Authorization: `Bearer ${userInfo.token}`\n        }\n      });\n      dispatch({\n        type: \"UPDATE_SUCCESS\"\n      });\n      ctxDispatch({\n        type: \"USER_SIGNIN\",\n        payload: data\n      });\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\n      toast.success(\"User updated successfully\");\n    } catch (err) {\n      dispatch({\n        type: \"FETCH_FAIL\"\n      });\n      toast.error(getError(err));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    className: \"max-width-800px\",\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"User Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shipping-menu\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UserProfilePage, \"tToTqPqlCvOk+KMJoVxTKHYj4BU=\");\n\n_c = UserProfilePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserProfilePage\");","map":{"version":3,"names":["React","useContext","useReducer","useState","Helmet","Form","Button","Store","toast","getError","axios","Container","reducer","state","action","type","loadingUpdate","UserProfilePage","dispatch","ctxDispatch","userInfo","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","submitHandler","e","preventDefault","data","put","headers","Authorization","token","payload","localStorage","setItem","JSON","stringify","success","err","error"],"sources":["/Users/notAdmin/Documents/dev/DarkRiver/frontend/src/screens/UserProfilePage.js"],"sourcesContent":["import React, { useContext, useReducer, useState } from \"react\";\nimport { Helmet } from \"react-helmet-async\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport { Store } from \"../Store\";\nimport { toast } from \"react-toastify\";\nimport { getError } from \"../utils\";\nimport axios from \"axios\";\nimport { Container } from \"react-bootstrap\";\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"UPDATE_REQUEST\":\n      return { ...state, loadingUpdate: true };\n    case \"UPDATE_SUCCESS\":\n      return { ...state, loadingUpdate: false };\n    case \"UPDATE_FAIL\":\n      return { ...state, loadingUpdate: false };\n\n    default:\n      return state;\n  }\n};\n\nexport default function UserProfilePage() {\n  const { state, dispatch: ctxDispatch } = useContext(Store);\n  const { userInfo } = state;\n  const [name, setName] = useState(userInfo.name);\n  const [email, setEmail] = useState(userInfo.email);\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n\n  const [{ loadingUpdate }, dispatch] = useReducer(reducer, {\n    loadingUpdate: false,\n  });\n\n  const submitHandler = async (e) => {\n    e.preventDefault();\n    try {\n      const { data } = await axios.put(\n        \"/api/users/profile\",\n        {\n          name,\n          email,\n          password,\n        },\n        {\n          headers: { Authorization: `Bearer ${userInfo.token}` },\n        }\n      );\n      dispatch({\n        type: \"UPDATE_SUCCESS\",\n      });\n      ctxDispatch({ type: \"USER_SIGNIN\", payload: data });\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\n      toast.success(\"User updated successfully\");\n    } catch (err) {\n      dispatch({\n        type: \"FETCH_FAIL\",\n      });\n      toast.error(getError(err));\n    }\n  };\n\n  return (\n    <Container fluid className=\"max-width-800px\">\n      <Helmet>\n        <title>User Profile</title>\n      </Helmet>\n       <div className=\"shipping-menu\"></div>\n\n    </Container>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}