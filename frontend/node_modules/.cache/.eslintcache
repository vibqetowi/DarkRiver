[{"/Users/notAdmin/Documents/rand/DarkRiver/frontend/src/index.js":"1","/Users/notAdmin/Documents/rand/DarkRiver/frontend/src/reportWebVitals.js":"2","/Users/notAdmin/Documents/rand/DarkRiver/frontend/src/App.js":"3","/Users/notAdmin/Documents/rand/DarkRiver/frontend/src/Store.js":"4","/Users/notAdmin/Documents/rand/DarkRiver/frontend/src/utils.js":"5","/Users/notAdmin/Documents/rand/DarkRiver/frontend/src/components/MessageBox.js":"6","/Users/notAdmin/Documents/rand/DarkRiver/frontend/src/components/Rating.js":"7","/Users/notAdmin/Documents/rand/DarkRiver/frontend/src/components/CheckoutSteps.js":"8","/Users/notAdmin/Documents/rand/DarkRiver/frontend/src/components/LoadingBox.js":"9","/Users/notAdmin/Documents/rand/DarkRiver/frontend/src/components/Product.js":"10","/Users/notAdmin/Documents/rand/DarkRiver/frontend/src/components/SearchBox.js":"11","/Users/notAdmin/Documents/rand/DarkRiver/frontend/src/components/ProtectedRoute.js":"12","/Users/notAdmin/Documents/rand/DarkRiver/frontend/src/components/AdminRoute.js":"13","/Users/notAdmin/Documents/rand/DarkRiver/frontend/src/pages/CartPage.js":"14","/Users/notAdmin/Documents/rand/DarkRiver/frontend/src/pages/HomePage.js":"15","/Users/notAdmin/Documents/rand/DarkRiver/frontend/src/pages/LoginPage.js":"16","/Users/notAdmin/Documents/rand/DarkRiver/frontend/src/pages/SellerPage.js":"17","/Users/notAdmin/Documents/rand/DarkRiver/frontend/src/pages/ShippingPage.js":"18","/Users/notAdmin/Documents/rand/DarkRiver/frontend/src/pages/SignupPage.js":"19","/Users/notAdmin/Documents/rand/DarkRiver/frontend/src/pages/AboutPage.js":"20","/Users/notAdmin/Documents/rand/DarkRiver/frontend/src/pages/CheckoutPage.js":"21","/Users/notAdmin/Documents/rand/DarkRiver/frontend/src/pages/PaymentMethodPage.js":"22","/Users/notAdmin/Documents/rand/DarkRiver/frontend/src/pages/ProductPage.js":"23","/Users/notAdmin/Documents/rand/DarkRiver/frontend/src/pages/OrderDetailsPage.js":"24","/Users/notAdmin/Documents/rand/DarkRiver/frontend/src/pages/UnderConstruction.js":"25","/Users/notAdmin/Documents/rand/DarkRiver/frontend/src/pages/OrderHistoryPage.js":"26","/Users/notAdmin/Documents/rand/DarkRiver/frontend/src/pages/UserProfilePage.js":"27","/Users/notAdmin/Documents/rand/DarkRiver/frontend/src/pages/SearchResultsPage.js":"28","/Users/notAdmin/Documents/rand/DarkRiver/frontend/src/pages/AdminDashboard.js":"29","/Users/notAdmin/Documents/rand/DarkRiver/frontend/src/pages/AdminOrderList.js":"30","/Users/notAdmin/Documents/rand/DarkRiver/frontend/src/pages/AdminUserList.js":"31","/Users/notAdmin/Documents/rand/DarkRiver/frontend/src/pages/AdminProductList.js":"32","/Users/notAdmin/Documents/rand/DarkRiver/frontend/src/pages/AdminProductEdit.js":"33","/Users/notAdmin/Documents/rand/DarkRiver/frontend/src/components/HcaptchaForm.js":"34"},{"size":929,"mtime":1653250797373,"results":"35","hashOfConfig":"36"},{"size":362,"mtime":1653249194873,"results":"37","hashOfConfig":"36"},{"size":14885,"mtime":1653324322940,"results":"38","hashOfConfig":"36"},{"size":2391,"mtime":1653249194871,"results":"39","hashOfConfig":"36"},{"size":150,"mtime":1653249194875,"results":"40","hashOfConfig":"36"},{"size":166,"mtime":1653307852418,"results":"41","hashOfConfig":"36"},{"size":1797,"mtime":1653274927307,"results":"42","hashOfConfig":"36"},{"size":484,"mtime":1653249194872,"results":"43","hashOfConfig":"36"},{"size":237,"mtime":1653249194872,"results":"44","hashOfConfig":"36"},{"size":2124,"mtime":1653309845789,"results":"45","hashOfConfig":"36"},{"size":1108,"mtime":1653279609754,"results":"46","hashOfConfig":"36"},{"size":306,"mtime":1653279673699,"results":"47","hashOfConfig":"36"},{"size":322,"mtime":1653280380196,"results":"48","hashOfConfig":"36"},{"size":7316,"mtime":1653309797995,"results":"49","hashOfConfig":"36"},{"size":2157,"mtime":1653324484489,"results":"50","hashOfConfig":"36"},{"size":3172,"mtime":1653316614617,"results":"51","hashOfConfig":"36"},{"size":189,"mtime":1653249194875,"results":"52","hashOfConfig":"36"},{"size":3880,"mtime":1653249194875,"results":"53","hashOfConfig":"36"},{"size":3636,"mtime":1653315026989,"results":"54","hashOfConfig":"36"},{"size":3754,"mtime":1653324204511,"results":"55","hashOfConfig":"36"},{"size":7712,"mtime":1653309797978,"results":"56","hashOfConfig":"36"},{"size":2365,"mtime":1653264611820,"results":"57","hashOfConfig":"36"},{"size":12819,"mtime":1653311478282,"results":"58","hashOfConfig":"36"},{"size":11016,"mtime":1653309797959,"results":"59","hashOfConfig":"36"},{"size":196,"mtime":1653276315427,"results":"60","hashOfConfig":"36"},{"size":3385,"mtime":1653276485139,"results":"61","hashOfConfig":"36"},{"size":3498,"mtime":1653249194875,"results":"62","hashOfConfig":"36"},{"size":10030,"mtime":1653321208804,"results":"63","hashOfConfig":"36"},{"size":4075,"mtime":1653282613301,"results":"64","hashOfConfig":"36"},{"size":4479,"mtime":1653282577370,"results":"65","hashOfConfig":"36"},{"size":4061,"mtime":1653307639347,"results":"66","hashOfConfig":"36"},{"size":5922,"mtime":1653307607633,"results":"67","hashOfConfig":"36"},{"size":8896,"mtime":1653307522831,"results":"68","hashOfConfig":"36"},{"size":853,"mtime":1653314096933,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"74"},"16curo4",{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"81"},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"81"},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"74"},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"74"},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"149","messages":"150","suppressedMessages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"152","messages":"153","suppressedMessages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"74"},{"filePath":"156","messages":"157","suppressedMessages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"74"},{"filePath":"160","messages":"161","suppressedMessages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"163","messages":"164","suppressedMessages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"166","messages":"167","suppressedMessages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"169","messages":"170","suppressedMessages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"172","messages":"173","suppressedMessages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"175","messages":"176","suppressedMessages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"178","messages":"179","suppressedMessages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},"/Users/notAdmin/Documents/rand/DarkRiver/frontend/src/index.js",["181"],[],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createRoot } from 'react-dom/client';\nimport { HelmetProvider } from \"react-helmet-async\";\nimport { PayPalScriptProvider } from \"@paypal/react-paypal-js\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { StoreProvider } from \"./Store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <StoreProvider>\n      <HelmetProvider>\n        <PayPalScriptProvider deferLoading={true}>\n          <App />\n        </PayPalScriptProvider>\n      </HelmetProvider>\n    </StoreProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",[],"/Users/notAdmin/Documents/rand/DarkRiver/frontend/src/reportWebVitals.js",[],[],"/Users/notAdmin/Documents/rand/DarkRiver/frontend/src/App.js",[],[],[],"/Users/notAdmin/Documents/rand/DarkRiver/frontend/src/Store.js",[],[],"/Users/notAdmin/Documents/rand/DarkRiver/frontend/src/utils.js",[],[],"/Users/notAdmin/Documents/rand/DarkRiver/frontend/src/components/MessageBox.js",[],[],"/Users/notAdmin/Documents/rand/DarkRiver/frontend/src/components/Rating.js",[],[],"/Users/notAdmin/Documents/rand/DarkRiver/frontend/src/components/CheckoutSteps.js",[],[],"/Users/notAdmin/Documents/rand/DarkRiver/frontend/src/components/LoadingBox.js",[],[],"/Users/notAdmin/Documents/rand/DarkRiver/frontend/src/components/Product.js",[],[],"/Users/notAdmin/Documents/rand/DarkRiver/frontend/src/components/SearchBox.js",[],[],"/Users/notAdmin/Documents/rand/DarkRiver/frontend/src/components/ProtectedRoute.js",[],[],"/Users/notAdmin/Documents/rand/DarkRiver/frontend/src/components/AdminRoute.js",[],[],"/Users/notAdmin/Documents/rand/DarkRiver/frontend/src/pages/CartPage.js",[],[],"/Users/notAdmin/Documents/rand/DarkRiver/frontend/src/pages/HomePage.js",[],[],"/Users/notAdmin/Documents/rand/DarkRiver/frontend/src/pages/LoginPage.js",["182"],[],"import Axios from \"axios\";\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\nimport Container from \"react-bootstrap/Container\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport { Helmet } from \"react-helmet-async\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { Store } from \"../Store\";\nimport { getError } from \"../utils\";\nimport { toast } from \"react-toastify\";\nimport HCaptchaForm from \"../components/HcaptchaForm\";\n\nexport default function LoginPage() {\n  const navigate = useNavigate();\n  const { search } = useLocation();\n  const redirectInUrl = new URLSearchParams(search).get(\"redirect\");\n  const redirect = redirectInUrl ? redirectInUrl : \"/\";\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const { state, dispatch: ctxDispatch } = useContext(Store);\n  const { userInfo } = state;\n  const submitHandler = async (e) => {\n    e.preventDefault();\n    try {\n      const { data } = await Axios.post(\"/api/users/login\", {\n        email,\n        password,\n      });\n      console.log(data);\n      ctxDispatch({ type: \"USER_SIGNIN\", payload: data });\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\n      navigate(redirect || \"/\");\n    } catch (err) {\n      alert(getError(err));\n    }\n  };\n\n  useEffect(() => {\n    if (userInfo) {\n      navigate(redirect);\n    }\n  }, [navigate, redirect, userInfo]);\n\n  return (\n    <Container fluid className=\"rounded-border-black-bg-small\">\n      <Helmet>\n        <title>Sign In</title>\n      </Helmet>\n      <h1 className=\"my-3\">Sign In</h1>\n      <Form onSubmit={submitHandler}>\n        <Form.Group className=\"mb-3\" controlId=\"email\">\n          <Form.Label>Email</Form.Label>\n          <Form.Control\n            type=\"email\"\n            required\n            onChange={(e) => setEmail(e.target.value)}\n          />\n        </Form.Group>\n        <Form.Group className=\"mb-3\" controlId=\"password\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            required\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </Form.Group>\n        <div className=\"mb-3\">\n          <div className=\"center-contents\">\n            <Button type=\"submit\" variant=\"yellow-black-txt-wide\">\n              Sign In\n            </Button>\n          </div>\n        </div>\n        <HCaptchaForm></HCaptchaForm>\n        <p>\n          hCaptcha pending implementation, it works but has no effect of acess\n        </p>\n\n        <div className=\"mb-3\">\n          <a href=\"https://alzheimer.ca/sites/default/files/documents/alzheimers-disease_getting-a-diagnosis_0.pdf\" className=\"amzn-link\">Forgot your password?</a>\n          <br></br>\n          New customer?{\" \"}\n          <Link to={`/signup?redirect=${redirect}`} className=\"amzn-link \">\n            Create your account\n          </Link>\n        </div>\n      </Form>\n      <br></br>\n      <p>Customer demo: johndoe@dmail.com, psw:jd123456</p>\n      <p>Admin demo: admin@darkriver.com, psw:123456 (under construction)</p>\n      <p>seller menu pending implementation</p>\n    </Container>\n  );\n}\n","/Users/notAdmin/Documents/rand/DarkRiver/frontend/src/pages/SellerPage.js",[],[],"/Users/notAdmin/Documents/rand/DarkRiver/frontend/src/pages/ShippingPage.js",[],[],"/Users/notAdmin/Documents/rand/DarkRiver/frontend/src/pages/SignupPage.js",[],[],"/Users/notAdmin/Documents/rand/DarkRiver/frontend/src/pages/AboutPage.js",["183"],[],"import { Col } from \"react-bootstrap\";\nimport { Row } from \"react-bootstrap\";\nimport { Container } from \"react-bootstrap\";\nimport myface from \"./myface.jpg\";\nimport comp249 from \"../pdf/Comp249.pdf\";\nimport comp352 from \"../pdf/COMP352.pdf\";\nimport soen228 from \"../pdf/SOEN228.pdf\";\nimport comp348 from \"../pdf/comp348.pdf\";\nimport engr213 from \"../pdf/ENGR213.pdf\";\n\nexport default function AboutPage(){\n    return (\n      <Container fluid className=\"rounded-border-black-bg\">\n        <h1>About this project</h1>\n        <br></br>\n        <Row>\n          <Col md={4}>\n            <img\n              src={myface}\n              id=\"myface\"\n              alt=\"Huynh Minh profile picture\"\n            ></img>\n          </Col>\n          <Col md={8}>\n            <h6>\n              My name is Huynh Minh and I am a first year Software Engineering\n              student at Concordia University.<br></br>\n              <br></br>The goal of this project is to create a fully functional\n              ecommerce website using the MERN stack (MongoDB, Express, React,\n              NodeJs). I wanted to go beyond the\n              <a href=\"  https://fifty-ten.herokuapp.com\" className=\"turquoise\">\n                {\" \"}\n                basic website\n              </a>\n              &nbsp;we did for our web programming course.<br></br>\n              <br></br>The design is inspired by the idea of a dark theme (which\n              is superior to the light theme) to Amazon.com, the project is in\n              active development and updates can be found on{\" \"}\n              <a\n                href=\"https://github.com/vibqetowi/DarkRiver\"\n                className=\"turquoise\"\n              >\n                {\" \"}\n                this repository.\n              </a>\n              <br></br>\n              <br></br>\n              Beyond web development, my skills include:\n              <ul className=\"about-page-list\">\n                <li>\n                  <a className=\"turquoise\" href={comp249}>\n                    Object Oriented Programming in Java\n                  </a>\n                </li>\n                <li>\n                  <a className=\"turquoise\" href={comp352}>\n                    Data Structures and Algorithms in Java\n                  </a>\n                </li>\n                <li>\n                  <a className=\"turquoise\" href={soen228}>\n                    Basic System Hardware Knowledge\n                  </a>\n                </li>\n                <li>\n                  <a className=\"turquoise\" href={comp348}>\n                    Basic Understaing of C#, LISP, PROLOG, LINQ, Python\n                  </a>\n                </li>\n                <li>\n                  <a className=\"turquoise\" href={engr213}>\n                    Differential Equations\n                  </a>\n                </li>\n              </ul>\n              <br></br>Our team of 4 placed 2nd in the internal{\" \"}\n              <a\n                href=\"https://www.engcomm.ca/concordia-university\"\n                className=\"turquoise\"\n              >\n                EngComm X Concordia\n              </a>{\" \"}\n              case competition where we had to design a commercially viable\n              solution to a case and then propose a plan to bring it to market.\n              <br></br>\n              <br></br>\n              The contact form is pending implementation, meanwhile I can be\n              contacted through the information on my CV or at{\" \"}\n              <a\n                className=\"turquoise\"\n                href=\"mailto:admin.darkriver@encryptedmail.anonaddy.com\"\n              >\n                admin.darkriver@encryptedmail.anonaddy.com\n              </a>\n            </h6>\n          </Col>\n        </Row>\n      </Container>\n    );\n}","/Users/notAdmin/Documents/rand/DarkRiver/frontend/src/pages/CheckoutPage.js",["184"],[],"import Axios from \"axios\";\nimport React, { useContext, useEffect, useReducer } from \"react\";\nimport { Helmet } from \"react-helmet-async\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport { toast } from \"react-toastify\";\nimport { Store } from \"../Store\";\nimport CheckoutSteps from \"../components/CheckoutSteps\";\nimport LoadingBox from \"../components/LoadingBox\";\nimport { getError } from \"../utils\";\nimport { Container } from \"react-bootstrap\";\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"CREATE_REQUEST\":\n      return { ...state, loading: true };\n    case \"CREATE_SUCCESS\":\n      return { ...state, loading: false };\n    case \"CREATE_FAIL\":\n      return { ...state, loading: false };\n    default:\n      return state;\n  }\n};\n\nexport default function Checkout() {\n  const navigate = useNavigate();\n\n  const [{ loading }, dispatch] = useReducer(reducer, {\n    loading: false,\n  });\n\n  const { state, dispatch: ctxDispatch } = useContext(Store);\n  const { cart, userInfo } = state;\n\n  const round2 = (num) => Math.round(num * 100 + Number.EPSILON) / 100; // 123.2345 => 123.23\n  cart.itemsPrice = round2(\n    cart.cartItems.reduce((a, c) => a + c.quantity * c.price, 0)\n  );\n  cart.shippingPrice = cart.itemsPrice >= 35 ? round2(0) : round2(10);\n  cart.taxPrice = round2(0.15 * cart.itemsPrice);\n  cart.totalPrice = cart.itemsPrice + cart.shippingPrice + cart.taxPrice;\n\n  const placeOrderHandler = async () => {\n    try {\n      dispatch({ type: \"CREATE_REQUEST\" });\n\n      const { data } = await Axios.post(\n        \"/api/orders\",\n        {\n          orderItems: cart.cartItems,\n          shippingAddress: cart.shippingAddress,\n          paymentMethod: cart.paymentMethod,\n          itemsPrice: cart.itemsPrice,\n          shippingPrice: cart.shippingPrice,\n          taxPrice: cart.taxPrice,\n          totalPrice: cart.totalPrice,\n        },\n        {\n          headers: {\n            authorization: `Bearer ${userInfo.token}`,\n          },\n        }\n      );\n      ctxDispatch({ type: \"CART_CLEAR\" });\n      dispatch({ type: \"CREATE_SUCCESS\" });\n      localStorage.removeItem(\"cartItems\");\n      navigate(`/order/${data.order._id}`);\n    } catch (err) {\n      dispatch({ type: \"CREATE_FAIL\" });\n      alert.error(getError(err));\n    }\n  };\n\n  useEffect(() => {\n    if (!cart.paymentMethod) {\n      navigate(\"/payment\");\n    }\n  }, [cart, navigate]);\n\n  return (\n    <div>\n      <CheckoutSteps step1 step2 step3 step4></CheckoutSteps>\n      <Helmet>\n        <title>Checkout</title>\n      </Helmet>\n      <Container fluid className=\"place-order-parent\">\n        <h1 className=\"my-3\" style={{ padding: \"1rem\" }}>\n          Checkout\n        </h1>\n        <Row>\n          <Col md={8}>\n            <Card className=\"black-bg\" style={{ margin: \"1rem\" }}>\n              <Card.Body>\n                <Card.Title>Shipping</Card.Title>\n                <Card.Text>\n                  <strong>Name:</strong> {cart.shippingAddress.fullName} <br />\n                  <strong>Address: </strong> {cart.shippingAddress.address},\n                  {cart.shippingAddress.city}, {cart.shippingAddress.postalCode}\n                  ,{cart.shippingAddress.country}\n                </Card.Text>\n                <Link to=\"/shipping\" className=\"amzn-link\">\n                  Edit\n                </Link>\n              </Card.Body>\n            </Card>\n            <Card className=\"black-bg\" style={{ margin: \"1rem\" }}>\n              <Card.Body>\n                <Card.Title>Payment</Card.Title>\n                <Card.Text>\n                  <strong>Method:</strong> {cart.paymentMethod}\n                </Card.Text>\n                <Link to=\"/payment\" className=\"amzn-link\">\n                  Edit\n                </Link>\n              </Card.Body>\n            </Card>\n\n            <Card className=\"black-bg\" style={{ margin: \"1rem\" }}>\n              <Card.Body>\n                <Card.Title>Items</Card.Title>\n                <ListGroup variant=\"flush\">\n                  {cart.cartItems.map((item) => (\n                    <ListGroup.Item className=\"black-bg\" key={item._id}>\n                      <Row className=\"align-items-center\">\n                        <Col md={6}>\n                          <Link\n                            className=\"normal-ass-white-txt\"\n                            to={`/${item.name}/${item.name}/dr/${item.slug}`}\n                          >\n                            <img\n                              src={item.image}\n                              alt={item.name}\n                              className=\"thumbnail\"\n                            ></img>{\" \"}\n                            {item.name}\n                          </Link>\n                        </Col>\n                        <Col md={3}>\n                          <span className=\"normal-ass-white-txt\">\n                            {item.quantity}\n                          </span>\n                        </Col>\n                        <Col md={3} className=\"normal-ass-white-txt\">\n                          ${item.price}\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  ))}\n                </ListGroup>\n                <Link to=\"/cart\" className=\"amzn-link\">\n                  Edit\n                </Link>\n              </Card.Body>\n            </Card>\n          </Col>\n          <Col md={4}>\n            <Card className=\"black-bg\" style={{ margin: \"1rem\" }}>\n              <Card.Body>\n                <Card.Title>Order Summary</Card.Title>\n                <ListGroup variant=\"flush\">\n                  <ListGroup.Item className=\"black-bg\">\n                    <Row className=\"normal-ass-white-txt\">\n                      <Col>Items</Col>\n                      <Col>${cart.itemsPrice.toFixed(2)}</Col>\n                    </Row>\n                  </ListGroup.Item>\n                  <ListGroup.Item className=\"black-bg\">\n                    <Row className=\"normal-ass-white-txt\">\n                      <Col>Shipping</Col>\n                      <Col>${cart.shippingPrice.toFixed(2)}</Col>\n                    </Row>\n                  </ListGroup.Item>\n                  <ListGroup.Item className=\"black-bg\">\n                    <Row className=\"normal-ass-white-txt\">\n                      <Col>Tax</Col>\n                      <Col>${cart.taxPrice.toFixed(2)}</Col>\n                    </Row>\n                  </ListGroup.Item>\n                  <ListGroup.Item className=\"black-bg\">\n                    <Row className=\"normal-ass-white-txt\">\n                      <Col>\n                        <strong> Order Total</strong>\n                      </Col>\n                      <Col>\n                        <strong>${cart.totalPrice.toFixed(2)}</strong>\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n                  <ListGroup.Item className=\"black-bg\">\n                    <div className=\"d-grid\">\n                      <Button\n                        type=\"button\"\n                        onClick={placeOrderHandler}\n                        disabled={cart.cartItems.length === 0}\n                        variant=\"yellow-black-txt\"\n                      >\n                        Place Order\n                      </Button>\n                    </div>\n                    {loading && <LoadingBox></LoadingBox>}\n                  </ListGroup.Item>\n                </ListGroup>\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n","/Users/notAdmin/Documents/rand/DarkRiver/frontend/src/pages/PaymentMethodPage.js",[],[],"/Users/notAdmin/Documents/rand/DarkRiver/frontend/src/pages/ProductPage.js",["185"],[],"import axios from \"axios\";\nimport { useContext, useEffect, useReducer, useRef, useState } from \"react\";\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Card from \"react-bootstrap/Card\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport Form from \"react-bootstrap/Form\";\nimport Badge from \"react-bootstrap/Badge\";\nimport Button from \"react-bootstrap/Button\";\nimport Rating from \"../components/Rating\";\nimport { Helmet } from \"react-helmet-async\";\nimport LoadingBox from \"../components/LoadingBox\";\nimport MessageBox from \"../components/MessageBox\";\nimport { getError } from \"../utils\";\nimport { Store } from \"../Store\";\nimport FloatingLabel from \"react-bootstrap/FloatingLabel\";\nimport { toast } from \"react-toastify\";\nimport { Container } from \"react-bootstrap\";\nimport { ListGroupItem } from \"react-bootstrap\";\nimport ratings_dist from \"./ratings_dist.jpg\";\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"REFRESH_PRODUCT\":\n      return { ...state, product: action.payload };\n    case \"CREATE_REQUEST\":\n      return { ...state, loadingCreateReview: true };\n    case \"CREATE_SUCCESS\":\n      return { ...state, loadingCreateReview: false };\n    case \"CREATE_FAIL\":\n      return { ...state, loadingCreateReview: false };\n    case \"FETCH_REQUEST\":\n      return { ...state, loading: true };\n    case \"FETCH_SUCCESS\":\n      return { ...state, product: action.payload, loading: false };\n    case \"FETCH_FAIL\":\n      return { ...state, loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default function ProductPage() {\n  let reviewsRef = useRef();\n\n  const [rating, setRating] = useState(0);\n  const [comment, setComment] = useState(\"\");\n  const [selectedImage, setSelectedImage] = useState(\"\");\n\n  const navigate = useNavigate();\n  const params = useParams();\n  const { slug } = params;\n\n  const [{ loading, error, product, loadingCreateReview }, dispatch] =\n    useReducer(reducer, {\n      product: [],\n      loading: true,\n      error: \"\",\n    });\n  useEffect(() => {\n    const fetchData = async () => {\n      dispatch({ type: \"FETCH_REQUEST\" });\n      try {\n        const result = await axios.get(`/api/products/slug/${slug}`);\n        dispatch({ type: \"FETCH_SUCCESS\", payload: result.data });\n      } catch (err) {\n        dispatch({ type: \"FETCH_FAIL\", payload: getError(err) });\n      }\n    };\n    fetchData();\n  }, [slug]);\n\n  const { state, dispatch: ctxDispatch } = useContext(Store);\n  const { cart, userInfo } = state;\n  const addToCartHandler = async () => {\n    const existItem = cart.cartItems.find((x) => x._id === product._id);\n    const quantity = existItem ? existItem.quantity + 1 : 1;\n    const { data } = await axios.get(`/api/products/${product._id}`);\n    if (data.countInStock < quantity) {\n      window.alert(\"Sorry. Product is out of stock\");\n      return;\n    }\n    ctxDispatch({\n      type: \"CART_ADD_ITEM\",\n      payload: { ...product, quantity },\n    });\n    navigate(\"/cart\");\n  };\n\n  const submitHandler = async (e) => {\n    e.preventDefault();\n    if (!comment || !rating) {\n      toast.error(\"Please enter comment and rating\");\n      return;\n    }\n    try {\n      const { data } = await axios.post(\n        `/api/products/${product._id}/reviews`,\n        { rating, comment, name: userInfo.name },\n        {\n          headers: { Authorization: `Bearer ${userInfo.token}` },\n        }\n      );\n\n      dispatch({\n        type: \"CREATE_SUCCESS\",\n      });\n      toast.success(\"Review submitted successfully\");\n      product.reviews.unshift(data.review);\n      product.numReviews = data.numReviews;\n      product.rating = data.rating;\n      dispatch({ type: \"REFRESH_PRODUCT\", payload: product });\n      window.scrollTo({\n        behavior: \"smooth\",\n        top: reviewsRef.current.offsetTop,\n      });\n    } catch (error) {\n      toast.error(getError(error));\n      dispatch({ type: \"CREATE_FAIL\" });\n    }\n  };\n  return loading ? (\n    <LoadingBox />\n  ) : error ? (\n    <MessageBox variant=\"danger\">{error}</MessageBox>\n  ) : (\n    <Container fluid className=\"rounded-border-black-bg\">\n      <Row>\n        <Col md={4}>\n          <img\n            className=\"img-large\"\n            src={selectedImage || product.image}\n            alt={product.name}\n          ></img>\n          <p>image gallery pending implementation</p>\n        </Col>\n        <Col md={5}>\n          <ListGroup variant=\"flush\">\n            <ListGroup.Item className=\"black-bg\">\n              <Helmet>\n                <title>{product.name}</title>\n              </Helmet>\n              <h1>{product.name}</h1>\n              <Link className=\"turquoise\" to={`/seller/${product.brand}`}>\n                <h6>Visit the {product.brand} store</h6>\n              </Link>\n            </ListGroup.Item>\n            <ListGroup.Item className=\"black-bg\">\n              <div className=\"one-line-parent\">\n                <div className=\"one-line-child\">\n                  <Rating rating={product.rating}></Rating>{\" \"}\n                </div>\n                <div className=\"one-line-child\">\n                  <p className=\"turquoise\">\n                    &nbsp;{product.numReviews} ratings\n                  </p>\n                </div>\n              </div>\n            </ListGroup.Item>\n            <ListGroup.Item className=\"black-bg\">\n              Price :<h3 className=\"colored-price\">&nbsp;${product.price}</h3>\n              <br></br> &amp;{\" \"}\n              <a\n                className=\"turquoise\"\n                href=\"https://www.amazon.com/gp/help/customer/display.html?nodeId=GNW5VKFXMF72FFMR\"\n              >\n                {\" \"}\n                Free Returns, most of the time{\" \"}\n              </a>\n            </ListGroup.Item>\n            <ListGroup.Item className=\"black-bg\">\n              <p>option selector (ex:size) pending implementation</p>\n            </ListGroup.Item>\n            <ListGroup.Item className=\"black-bg\">\n              Description:\n              <p>{product.description}</p>\n            </ListGroup.Item>\n          </ListGroup>\n        </Col>\n        <Col md={3}>\n          <Card className=\"black-bg\">\n            <Card.Body className=\"black-bg\">\n              <ListGroup variant=\"flush\">\n                <ListGroup.Item className=\"black-bg\">\n                  <Row>\n                    {\" \"}\n                    <div className=\"one-line-parent\">\n                      <div className=\"one-line-child\">\n                        {\" \"}\n                        <a\n                          href=\"https://www.amazon.com/gp/help/customer/display.html?nodeId=GGE5X8EV7VNVTK6R\"\n                          className=\"turquoise\"\n                        >\n                          FREE delivery&nbsp;\n                        </a>\n                      </div>\n                      {product.price > 35 ? null : (\n                        <>\n                          {\" \"}\n                          <div className=\"one-line-child\"> on</div>\n                          <br></br> orders above 35$\n                        </>\n                      )}\n                    </div>\n                  </Row>\n                  <br></br>\n                  <Row>\n                    {\" \"}\n                    <Col>Price:</Col>\n                    <Col>${product.price}</Col>\n                  </Row>\n                </ListGroup.Item>\n                <ListGroup.Item className=\"black-bg\">\n                  <Row>\n                    <Col>\n                      {product.countInStock > 0 ? (\n                        <Badge bg=\"success\">In Stock</Badge>\n                      ) : (\n                        <Badge bg=\"danger\">Unavailable</Badge>\n                      )}\n                    </Col>\n                  </Row>\n                </ListGroup.Item>\n\n                {product.countInStock > 0 && (\n                  <ListGroup.Item className=\"black-bg\">\n                    <div className=\"d-grid\">\n                      <Button onClick={addToCartHandler} variant=\"amzn\">\n                        Add to Cart\n                      </Button>\n                    </div>\n                  </ListGroup.Item>\n                )}\n\n                <ListGroupItem className=\"black-bg\">\n                  <div className=\"one-line-parent\">\n                    <div className=\"one-line-child\">\n                      <i className=\"fa fa-lock\"></i>\n                    </div>\n                    <div className=\"one-line-child\">\n                      <a\n                        href=\"https://www.amazon.com/gp/help/customer/display.html?nodeId=201909010\"\n                        className=\"turquoise\"\n                      >\n                        &nbsp; Secure transaction\n                      </a>\n                    </div>\n                  </div>\n                </ListGroupItem>\n                <ListGroupItem className=\"black-bg\">\n                  <div className=\"one-line-parent\">\n                    <div className=\"one-line-child\">Sold by &nbsp;</div>\n                    <div className=\"one-line-child\">\n                      {\" \"}\n                      <Link\n                        className=\"turquoise\"\n                        to={`/seller/${product.brand}`}\n                      >\n                        <h6>{product.brand}</h6>\n                      </Link>{\" \"}\n                    </div>\n                  </div>\n                  <div className=\"one-line-parent\">\n                    <div className=\"one-line-child\">\n                      and fulfilled by &nbsp;\n                    </div>\n                    <div className=\"one-line-child\">\n                      {\" \"}\n                      <Link className=\"turquoise\" to=\"/\">\n                        <h6>DarkRiver</h6>\n                      </Link>{\" \"}\n                    </div>\n                  </div>\n                </ListGroupItem>\n              </ListGroup>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n      <Row>\n        {\" \"}\n        <Col md={4}>\n          <div id=\"rating-distribution-temp\">\n            {\" \"}\n            <h2 ref={reviewsRef}>Customer Reviews</h2>\n            <p>\n              review distribution pending implementation, this is just an image\n            </p>\n            <img src={ratings_dist} alt=\"rating distribution img\"></img>\n          </div>\n        </Col>\n        <Col md={8}>\n          <div className=\"my-3\">\n            {userInfo ? (\n              <form onSubmit={submitHandler}>\n                <h3>Write a review</h3>\n                <Form.Group className=\"mb-3\" controlId=\"rating\">\n                  <Form.Label>Rating</Form.Label>\n                  <Form.Select\n                    aria-label=\"Rating\"\n                    value={rating}\n                    onChange={(e) => setRating(e.target.value)}\n                  >\n                    <option value=\"\">Select...</option>\n                    <option value=\"1\">1- Poor</option>\n                    <option value=\"2\">2- Fair</option>\n                    <option value=\"3\">3- Good</option>\n                    <option value=\"4\">4- Very good</option>\n                    <option value=\"5\">5- Excelent</option>\n                  </Form.Select>\n                </Form.Group>\n                <FloatingLabel\n                  controlId=\"floatingTextarea\"\n                  label=\"Comments\"\n                  className=\"mb-3\"\n                >\n                  <Form.Control\n                    as=\"textarea\"\n                    placeholder=\"Leave a comment here\"\n                    value={comment}\n                    onChange={(e) => setComment(e.target.value)}\n                  />\n                </FloatingLabel>\n\n                <div className=\"mb-3\">\n                  <Button disabled={loadingCreateReview} type=\"submit\">\n                    Submit\n                  </Button>\n                  {loadingCreateReview && <LoadingBox></LoadingBox>}\n                </div>\n              </form>\n            ) : (\n              <MessageBox>\n                Please{\" \"}\n                <Link to={`/login?redirect=/dr/${product.slug}`}>Sign In</Link>{\" \"}\n                to write a review\n              </MessageBox>\n            )}\n          </div>\n          <div className=\"mb-3\">\n            {product.reviews.length === 0 && (\n              <MessageBox>No reviews</MessageBox>\n            )}\n          </div>\n          <ListGroup>\n            {product.reviews.map((review) => (\n              <ListGroup.Item key={review._id}>\n                <strong>{review.name}</strong>\n                <Rating rating={review.rating} caption=\" \"></Rating>\n                <p>{review.createdAt.substring(0, 10)}</p>\n                <p>{review.comment}</p>\n              </ListGroup.Item>\n            ))}\n          </ListGroup>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n","/Users/notAdmin/Documents/rand/DarkRiver/frontend/src/pages/OrderDetailsPage.js",[],[],"/Users/notAdmin/Documents/rand/DarkRiver/frontend/src/pages/UnderConstruction.js",[],[],"/Users/notAdmin/Documents/rand/DarkRiver/frontend/src/pages/OrderHistoryPage.js",["186"],[],"import React, { useContext, useEffect, useReducer } from \"react\";\nimport { Helmet } from \"react-helmet-async\";\nimport axios from \"axios\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport LoadingBox from \"../components/LoadingBox\";\nimport MessageBox from \"../components/MessageBox\";\nimport { Store } from \"../Store\";\nimport { getError } from \"../utils\";\nimport Button from \"react-bootstrap/esm/Button\";\nimport { Container } from \"react-bootstrap\";\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"FETCH_REQUEST\":\n      return { ...state, loading: true };\n    case \"FETCH_SUCCESS\":\n      return { ...state, orders: action.payload, loading: false };\n    case \"FETCH_FAIL\":\n      return { ...state, loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default function OrderHistoryPage() {\n  const { state } = useContext(Store);\n  const { userInfo } = state;\n  const navigate = useNavigate();\n\n  const [{ loading, error, orders }, dispatch] = useReducer(reducer, {\n    loading: true,\n    error: \"\",\n  });\n  useEffect(() => {\n    const fetchData = async () => {\n      dispatch({ type: \"FETCH_REQUEST\" });\n      try {\n        const { data } = await axios.get(\n          `/api/orders/mine`,\n\n          { headers: { Authorization: `Bearer ${userInfo.token}` } }\n        );\n        dispatch({ type: \"FETCH_SUCCESS\", payload: data });\n      } catch (error) {\n        dispatch({\n          type: \"FETCH_FAIL\",\n          payload: getError(error),\n        });\n      }\n    };\n    fetchData();\n  }, [userInfo]);\n  return (\n    <>\n      <Helmet>\n        <title>Order History</title>\n      </Helmet>\n\n      <h1>Under construction</h1>\n      <div className=\"rounded-border-black-bg\">\n        <h1>Order History</h1>\n        {loading ? (\n          <LoadingBox></LoadingBox>\n        ) : error ? (\n          <MessageBox variant=\"danger\">not logged in</MessageBox>\n        ) : (\n          <table className=\"table\">\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>DATE</th>\n                <th>TOTAL</th>\n                <th>PAID</th>\n                <th>DELIVERED</th>\n                <th>ACTIONS</th>\n              </tr>\n            </thead>\n            <tbody>\n              {orders.map((order) => (\n                <tr key={order._id}>\n                  <td>\n                    <Link to={`/order/${order._id}`} className=\"turquoise\">\n                      {\" \"}\n                      #{order._id}\n                    </Link>\n                  </td>\n                  <td>{order.createdAt.substring(0, 10)}</td>\n                  <td>{order.totalPrice.toFixed(2)}</td>\n                  <td>{order.isPaid ? order.paidAt.substring(0, 10) : \"No\"}</td>\n                  <td>\n                    {order.isDelivered\n                      ? order.deliveredAt.substring(0, 10)\n                      : \"No\"}\n                  </td>\n                  <td>\n                    <Button\n                      type=\"button\"\n                      variant=\"amzn\"\n                      onClick={() => {\n                        navigate(`/order/${order._id}`);\n                      }}\n                    >\n                      Details\n                    </Button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        )}\n      </div>\n    </>\n  );\n}\n","/Users/notAdmin/Documents/rand/DarkRiver/frontend/src/pages/UserProfilePage.js",["187","188","189"],[],"import React, { useContext, useReducer, useState } from \"react\";\nimport { Helmet } from \"react-helmet-async\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport { Store } from \"../Store\";\nimport { getError } from \"../utils\";\nimport axios from \"axios\";\nimport { Container } from \"react-bootstrap\";\nimport { toast } from \"react-toastify\";\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"UPDATE_REQUEST\":\n      return { ...state, loadingUpdate: true };\n    case \"UPDATE_SUCCESS\":\n      return { ...state, loadingUpdate: false };\n    case \"UPDATE_FAIL\":\n      return { ...state, loadingUpdate: false };\n\n    default:\n      return state;\n  }\n};\n\nexport default function UserProfilePage() {\n  const { state, dispatch: ctxDispatch } = useContext(Store);\n  const { userInfo } = state;\n  const [name, setName] = useState(userInfo.name);\n  const [email, setEmail] = useState(userInfo.email);\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n\n  const [{ loadingUpdate }, dispatch] = useReducer(reducer, {\n    loadingUpdate: false,\n  });\n\n  const submitHandler = async (e) => {\n    e.preventDefault();\n    try {\n      const { data } = await axios.put(\n        \"/api/users/profile\",\n        {\n          name,\n          email,\n          password,\n        },\n        {\n          headers: { Authorization: `Bearer ${userInfo.token}` },\n        }\n      );\n      dispatch({\n        type: \"UPDATE_SUCCESS\",\n      });\n      ctxDispatch({ type: \"USER_SIGNIN\", payload: data });\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\n      alert.success(\"User updated successfully\");\n    } catch (err) {\n      dispatch({\n        type: \"FETCH_FAIL\",\n      });\n      alert.error(getError(err));\n    }\n  };\n\n  return (\n    <Container fluid className=\"max-width-800px\">\n      <Helmet>\n        <title>User Profile</title>\n      </Helmet>\n      <div className=\"shipping-menu\">\n        {\" \"}\n        <h1 className=\"my-3\">User Profile</h1>\n        <form onSubmit={submitHandler}>\n          <Form.Group className=\"mb-3\" controlId=\"name\">\n            <Form.Label>Name</Form.Label>\n            <Form.Control\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n              required\n            />\n          </Form.Group>\n          <Form.Group className=\"mb-3\" controlId=\"name\">\n            <Form.Label>Email</Form.Label>\n            <Form.Control\n              type=\"email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              required\n            />\n          </Form.Group>\n          <Form.Group className=\"mb-3\" controlId=\"password\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              onChange={(e) => setPassword(e.target.value)}\n            />\n          </Form.Group>\n          <Form.Group className=\"mb-3\" controlId=\"password\">\n            <Form.Label>Confirm Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              onChange={(e) => setConfirmPassword(e.target.value)}\n            />\n          </Form.Group>\n          <div className=\"mb-3\">\n            <div className=\"center-contents\">\n              {\" \"}\n              <Button variant=\"yellow-black-txt-wide\" type=\"submit\">\n                Update\n              </Button>\n            </div>\n          </div>\n        </form>\n      </div>\n    </Container>\n  );\n}\n","/Users/notAdmin/Documents/rand/DarkRiver/frontend/src/pages/SearchResultsPage.js",[],[],"/Users/notAdmin/Documents/rand/DarkRiver/frontend/src/pages/AdminDashboard.js",[],[],"/Users/notAdmin/Documents/rand/DarkRiver/frontend/src/pages/AdminOrderList.js",[],[],"/Users/notAdmin/Documents/rand/DarkRiver/frontend/src/pages/AdminUserList.js",[],[],"/Users/notAdmin/Documents/rand/DarkRiver/frontend/src/pages/AdminProductList.js",[],[],"/Users/notAdmin/Documents/rand/DarkRiver/frontend/src/pages/AdminProductEdit.js",[],[],"/Users/notAdmin/Documents/rand/DarkRiver/frontend/src/components/HcaptchaForm.js",[],[],{"ruleId":"190","severity":1,"message":"191","line":3,"column":10,"nodeType":"192","messageId":"193","endLine":3,"endColumn":20},{"ruleId":"190","severity":1,"message":"194","line":10,"column":10,"nodeType":"192","messageId":"193","endLine":10,"endColumn":15},{"ruleId":"195","severity":1,"message":"196","line":18,"column":13,"nodeType":"197","endLine":22,"endColumn":14},{"ruleId":"190","severity":1,"message":"194","line":10,"column":10,"nodeType":"192","messageId":"193","endLine":10,"endColumn":15},{"ruleId":"190","severity":1,"message":"198","line":49,"column":25,"nodeType":"192","messageId":"193","endLine":49,"endColumn":41},{"ruleId":"190","severity":1,"message":"199","line":10,"column":10,"nodeType":"192","messageId":"193","endLine":10,"endColumn":19},{"ruleId":"190","severity":1,"message":"194","line":9,"column":10,"nodeType":"192","messageId":"193","endLine":9,"endColumn":15},{"ruleId":"190","severity":1,"message":"200","line":31,"column":10,"nodeType":"192","messageId":"193","endLine":31,"endColumn":25},{"ruleId":"190","severity":1,"message":"201","line":33,"column":12,"nodeType":"192","messageId":"193","endLine":33,"endColumn":25},"no-unused-vars","'createRoot' is defined but never used.","Identifier","unusedVar","'toast' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'setSelectedImage' is assigned a value but never used.","'Container' is defined but never used.","'confirmPassword' is assigned a value but never used.","'loadingUpdate' is assigned a value but never used."]