[{"/Users/notAdmin/Documents/dev/DarkRiver/frontend/src/index.js":"1","/Users/notAdmin/Documents/dev/DarkRiver/frontend/src/App.js":"2","/Users/notAdmin/Documents/dev/DarkRiver/frontend/src/Store.js":"3","/Users/notAdmin/Documents/dev/DarkRiver/frontend/src/reportWebVitals.js":"4","/Users/notAdmin/Documents/dev/DarkRiver/frontend/src/screens/HomePage.js":"5","/Users/notAdmin/Documents/dev/DarkRiver/frontend/src/screens/AislePage.js":"6","/Users/notAdmin/Documents/dev/DarkRiver/frontend/src/screens/ProductPage.js":"7","/Users/notAdmin/Documents/dev/DarkRiver/frontend/src/screens/SellerPage.js":"8","/Users/notAdmin/Documents/dev/DarkRiver/frontend/src/screens/SignupPage.js":"9","/Users/notAdmin/Documents/dev/DarkRiver/frontend/src/screens/CartPage.js":"10","/Users/notAdmin/Documents/dev/DarkRiver/frontend/src/screens/AboutPage.js":"11","/Users/notAdmin/Documents/dev/DarkRiver/frontend/src/screens/PaymentMethodPage.js":"12","/Users/notAdmin/Documents/dev/DarkRiver/frontend/src/screens/ShippingPage.js":"13","/Users/notAdmin/Documents/dev/DarkRiver/frontend/src/screens/OrderPage.js":"14","/Users/notAdmin/Documents/dev/DarkRiver/frontend/src/screens/LoginPage.js":"15","/Users/notAdmin/Documents/dev/DarkRiver/frontend/src/screens/OrderDetailsPage.js":"16","/Users/notAdmin/Documents/dev/DarkRiver/frontend/src/components/Product.js":"17","/Users/notAdmin/Documents/dev/DarkRiver/frontend/src/components/LoadingBox.js":"18","/Users/notAdmin/Documents/dev/DarkRiver/frontend/src/components/Rating.js":"19","/Users/notAdmin/Documents/dev/DarkRiver/frontend/src/components/MessageBox.js":"20","/Users/notAdmin/Documents/dev/DarkRiver/frontend/src/components/Aisle.js":"21","/Users/notAdmin/Documents/dev/DarkRiver/frontend/src/components/CheckoutSteps.js":"22","/Users/notAdmin/Documents/dev/DarkRiver/frontend/src/utils.js":"23"},{"size":883,"mtime":1653137715969,"results":"24","hashOfConfig":"25"},{"size":5176,"mtime":1653136486480,"results":"26","hashOfConfig":"25"},{"size":2391,"mtime":1653076990394,"results":"27","hashOfConfig":"25"},{"size":362,"mtime":1653076990418,"results":"28","hashOfConfig":"25"},{"size":3178,"mtime":1653136103668,"results":"29","hashOfConfig":"25"},{"size":2250,"mtime":1653135503721,"results":"30","hashOfConfig":"25"},{"size":5957,"mtime":1653076990427,"results":"31","hashOfConfig":"25"},{"size":189,"mtime":1653076990427,"results":"32","hashOfConfig":"25"},{"size":3458,"mtime":1653135503760,"results":"33","hashOfConfig":"25"},{"size":6852,"mtime":1653135503721,"results":"34","hashOfConfig":"25"},{"size":255,"mtime":1653076990418,"results":"35","hashOfConfig":"25"},{"size":2302,"mtime":1653076990427,"results":"36","hashOfConfig":"25"},{"size":3881,"mtime":1653076990436,"results":"37","hashOfConfig":"25"},{"size":7732,"mtime":1653135503720,"results":"38","hashOfConfig":"25"},{"size":2720,"mtime":1653135503721,"results":"39","hashOfConfig":"25"},{"size":10637,"mtime":1653135391688,"results":"40","hashOfConfig":"25"},{"size":1758,"mtime":1653076990405,"results":"41","hashOfConfig":"25"},{"size":237,"mtime":1653076990396,"results":"42","hashOfConfig":"25"},{"size":1785,"mtime":1653076990406,"results":"43","hashOfConfig":"25"},{"size":166,"mtime":1653076990405,"results":"44","hashOfConfig":"25"},{"size":572,"mtime":1653076990394,"results":"45","hashOfConfig":"25"},{"size":484,"mtime":1653076990395,"results":"46","hashOfConfig":"25"},{"size":150,"mtime":1653076990437,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"orqic6",{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"54"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"54"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/notAdmin/Documents/dev/DarkRiver/frontend/src/index.js",[],[],"/Users/notAdmin/Documents/dev/DarkRiver/frontend/src/App.js",[],[],[],"/Users/notAdmin/Documents/dev/DarkRiver/frontend/src/Store.js",[],[],"/Users/notAdmin/Documents/dev/DarkRiver/frontend/src/reportWebVitals.js",[],[],"/Users/notAdmin/Documents/dev/DarkRiver/frontend/src/screens/HomePage.js",[],[],"/Users/notAdmin/Documents/dev/DarkRiver/frontend/src/screens/AislePage.js",[],[],"/Users/notAdmin/Documents/dev/DarkRiver/frontend/src/screens/ProductPage.js",["120","121"],[],"/Users/notAdmin/Documents/dev/DarkRiver/frontend/src/screens/SellerPage.js",[],[],"/Users/notAdmin/Documents/dev/DarkRiver/frontend/src/screens/SignupPage.js",[],[],"/Users/notAdmin/Documents/dev/DarkRiver/frontend/src/screens/CartPage.js",["122","123","124","125","126","127","128"],[],"import axios from \"axios\";\nimport { useContext, useEffect, useReducer } from \"react\";\nimport {\n  Button,\n  Card,\n  Col,\n  Container,\n  ListGroup,\n  ListGroupItem,\n  Row,\n} from \"react-bootstrap\";\nimport { Helmet } from \"react-helmet-async\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport logger from \"use-reducer-logger\";\nimport MessageBox from \"../components/MessageBox\";\nimport Product from \"../components/Product\";\nimport { Store } from \"../Store\";\nimport { getError } from \"../utils\";\n\nexport default function CartPage() {\n  const navigate = useNavigate();\n  const { state, dispatch: ctxDispatch } = useContext(Store);\n  const {\n    cart: { cartItems },\n  } = state;\n\n  const updateCartHandler = async (item, quantity) => {\n    const { data } = await axios.get(`/api/products/${item._id}`);\n    if (data.countInStock < quantity) {\n      window.alert(\"Sorry. Product is out of stock\");\n      return;\n    }\n    ctxDispatch({\n      type: \"CART_ADD_ITEM\",\n      payload: { ...item, quantity },\n    });\n  };\n  const removeItemHandler = (item) => {\n    ctxDispatch({ type: \"CART_REMOVE_ITEM\", payload: item });\n  };\n\n  const checkoutHandler = () => {\n    navigate(\"/signin?redirect=/shipping\");\n  };\n\n  const subtotal = cartItems.reduce((a, c) => a + c.price * c.quantity, 0);\n\n  return (\n    <Container className=\"rounded-border-black-bg\">\n      <Helmet>\n        <title>Shopping Cart</title>\n      </Helmet>\n\n      <Row style={{ minHeight: \"400px\" }}>\n        <Col xl={8} className=\"black-bg\">\n          {cartItems.length === 0 ? (\n            <div className=\"col2\">\n              <div className=\"cart-page-left-left-div\">\n                <img src=\"/images/shopNow.jpg\" className=\"shop-now-img\"></img>\n              </div>\n              <div className=\"cart-page-left-right-div\">\n                <h3>Your DarkRiver Cart is empty </h3> <br></br>\n                <Link to=\"/\" className=\"amzn-link \">\n                  Shop today's deal\n                </Link>\n              </div>\n            </div>\n          ) : (\n            <>\n              <ListGroup className=\"black-bg\">\n                <Row>\n                  <Col xl={6}></Col>\n                  <Col xl={6}>\n                    {\" \"}\n                    <h1 className=\"cart-page-h1-txt\">Shopping Cart</h1>\n                  </Col>\n                </Row>\n\n                {cartItems.map((item) => (\n                  <ListGroup.Item className=\"black-bg\" key={item._id}>\n                    <Row className=\"align-items-center\">\n                      <Col xl={4} className=\"black-bg\">\n                        <img\n                          src={item.image}\n                          alt={item.name}\n                          className=\"img-fluid rounded img-thumbnail\"\n                        ></img>\n                        <Link\n                          className=\"normal-ass-white-txt\"\n                          to={`/product/${item.slug}`}\n                        ></Link>\n                      </Col>\n                      <Col xl={5}>\n                        <div className=\"one-line-parent\">\n                          <p className=\"cart-page-txt\"> {item.name}</p>\n                          <p>\n                            <Link\n                              className=\"normal-ass-white-txt\"\n                              to={`/seller/${item.brand}`}\n                            >\n                              sold by {item.brand}\n                            </Link>\n                          </p>\n                          <p className=\"cart-page-txt\"> ${item.price}</p>\n                          <div className=\"one-line-child\">\n                            <Button\n                              onClick={() =>\n                                updateCartHandler(item, item.quantity - 1)\n                              }\n                              variant=\"dark\"\n                              disabled={item.quantity === 1}\n                            >\n                              <i className=\"fas fa-minus-circle\"></i>\n                            </Button>\n                            <span className=\"normal-ass-white-txt\">\n                              {item.quantity}\n                            </span>{\" \"}\n                            <Button\n                              variant=\"dark\"\n                              onClick={() =>\n                                updateCartHandler(item, item.quantity + 1)\n                              }\n                              disabled={item.quantity === item.countInStock}\n                            >\n                              <i className=\"fas fa-plus-circle\"></i>\n                            </Button>\n                          </div>\n                          <div className=\"one-line-child\">\n                            <Button\n                              onClick={() => removeItemHandler(item)}\n                              variant=\"black-bg-white-txt\"\n                            >\n                              Delete\n                            </Button>\n                          </div>\n                        </div>\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n                ))}\n              </ListGroup>\n            </>\n          )}\n        </Col>\n        <Col xl={4}>\n          <Card className=\"black-bg\">\n            <Card.Body>\n              {cartItems.length === 0 ? (\n                <div></div>\n              ) : (\n                <ListGroup variant=\"flush\">\n                  <ListGroup.Item className=\"black-bg\">\n                    <br></br>\n                    <br></br>\n                    <h3>\n                      Subtotal ({cartItems.reduce((a, c) => a + c.quantity, 0)}{\" \"}\n                      items) : $\n                      {subtotal}\n                    </h3>\n                  </ListGroup.Item>\n                  <ListGroupItem className=\"black-bg\">\n                    {subtotal <\n                    35 ? (\n                      <p>\n                        add $\n                        {35 -\n                          subtotal}\n                        &nbsp;of items to get free shipping\n                      </p>\n                    ) : (\n                      <p> &amp; free shipping</p>\n                    )}\n                  </ListGroupItem>\n                  <ListGroup.Item className=\"black-bg\">\n                    <div className=\"d-grid\">\n                      <Button\n                        type=\"button\"\n                        variant=\"yellow-black-txt\"\n                        onClick={checkoutHandler}\n                      >\n                        Proceed to Checkout\n                      </Button>\n                    </div>\n                  </ListGroup.Item>\n                </ListGroup>\n              )}\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n","/Users/notAdmin/Documents/dev/DarkRiver/frontend/src/screens/AboutPage.js",[],[],"/Users/notAdmin/Documents/dev/DarkRiver/frontend/src/screens/PaymentMethodPage.js",[],[],"/Users/notAdmin/Documents/dev/DarkRiver/frontend/src/screens/ShippingPage.js",[],[],"/Users/notAdmin/Documents/dev/DarkRiver/frontend/src/screens/OrderPage.js",[],[],"/Users/notAdmin/Documents/dev/DarkRiver/frontend/src/screens/LoginPage.js",["129"],[],"import Axios from \"axios\";\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\nimport Container from \"react-bootstrap/Container\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport { Helmet } from \"react-helmet-async\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { Store } from \"../Store\";\nimport { getError } from \"../utils\";\nimport { toast } from \"react-toastify\";\n\nexport default function LoginPage() {\n  const navigate = useNavigate();\n  const { search } = useLocation();\n  const redirectInUrl = new URLSearchParams(search).get(\"redirect\");\n  const redirect = redirectInUrl ? redirectInUrl : \"/\";\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const { state, dispatch: ctxDispatch } = useContext(Store);\n  const { userInfo } = state;\n  const submitHandler = async (e) => {\n    e.preventDefault();\n    try {\n      const { data } = await Axios.post(\"/api/users/signin\", {\n        email,\n        password,\n      });\n      console.log(data);\n      ctxDispatch({ type: \"USER_SIGNIN\", payload: data });\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\n      navigate(redirect || \"/\");\n    } catch (err) {\n      alert(getError(err));\n    }\n  };\n\n  useEffect(() => {\n    if (userInfo) {\n      navigate(redirect);\n    }\n  }, [navigate, redirect, userInfo]);\n\n  return (\n    <Container fluid className=\"rounded-border-black-bg-small\">\n      <Helmet>\n        <title>Sign In</title>\n      </Helmet>\n      <h1 className=\"my-3\">Sign In</h1>\n      <Form onSubmit={submitHandler}>\n        <Form.Group className=\"mb-3\" controlId=\"email\">\n          <Form.Label>Email</Form.Label>\n          <Form.Control\n            type=\"email\"\n            required\n            onChange={(e) => setEmail(e.target.value)}\n          />\n        </Form.Group>\n        <Form.Group className=\"mb-3\" controlId=\"password\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            required\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </Form.Group>\n        <div className=\"mb-3\">\n          <div className=\"center-contents\">\n            <Button type=\"submit\" variant=\"yellow-black-txt-wide\">\n              Sign In\n            </Button>\n          </div>\n        </div>\n        <div className=\"mb-3\">\n          New customer?{\" \"}\n          <Link to={`/signup?redirect=${redirect}`} className=\"amzn-link \">\n            Create your account\n          </Link>\n        </div>\n      </Form>\n      <br></br>\n      <p>Customer demo: johndoe@dmail.com, psw:123456</p>\n      <p>Admin demo: admin@darkriver.com, psw:123456</p>\n    </Container>\n  );\n}\n","/Users/notAdmin/Documents/dev/DarkRiver/frontend/src/screens/OrderDetailsPage.js",[],[],"/Users/notAdmin/Documents/dev/DarkRiver/frontend/src/components/Product.js",[],[],"/Users/notAdmin/Documents/dev/DarkRiver/frontend/src/components/LoadingBox.js",[],[],"/Users/notAdmin/Documents/dev/DarkRiver/frontend/src/components/Rating.js",[],[],"/Users/notAdmin/Documents/dev/DarkRiver/frontend/src/components/MessageBox.js",[],[],"/Users/notAdmin/Documents/dev/DarkRiver/frontend/src/components/Aisle.js",[],[],"/Users/notAdmin/Documents/dev/DarkRiver/frontend/src/components/CheckoutSteps.js",[],[],"/Users/notAdmin/Documents/dev/DarkRiver/frontend/src/utils.js",[],[],{"ruleId":"130","severity":1,"message":"131","line":12,"column":16,"nodeType":"132","messageId":"133","endLine":12,"endColumn":24},{"ruleId":"130","severity":1,"message":"134","line":33,"column":9,"nodeType":"132","messageId":"133","endLine":33,"endColumn":17},{"ruleId":"130","severity":1,"message":"135","line":2,"column":22,"nodeType":"132","messageId":"133","endLine":2,"endColumn":31},{"ruleId":"130","severity":1,"message":"136","line":2,"column":33,"nodeType":"132","messageId":"133","endLine":2,"endColumn":43},{"ruleId":"130","severity":1,"message":"137","line":14,"column":8,"nodeType":"132","messageId":"133","endLine":14,"endColumn":14},{"ruleId":"130","severity":1,"message":"138","line":15,"column":8,"nodeType":"132","messageId":"133","endLine":15,"endColumn":18},{"ruleId":"130","severity":1,"message":"139","line":16,"column":8,"nodeType":"132","messageId":"133","endLine":16,"endColumn":15},{"ruleId":"130","severity":1,"message":"140","line":18,"column":10,"nodeType":"132","messageId":"133","endLine":18,"endColumn":18},{"ruleId":"141","severity":1,"message":"142","line":59,"column":17,"nodeType":"143","endLine":59,"endColumn":73},{"ruleId":"130","severity":1,"message":"144","line":10,"column":10,"nodeType":"132","messageId":"133","endLine":10,"endColumn":15},"no-unused-vars","'Navigate' is defined but never used.","Identifier","unusedVar","'navigate' is assigned a value but never used.","'useEffect' is defined but never used.","'useReducer' is defined but never used.","'logger' is defined but never used.","'MessageBox' is defined but never used.","'Product' is defined but never used.","'getError' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'toast' is defined but never used."]